/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NotficationsRouteImport } from './routes/notfications'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as CategoriesRouteImport } from './routes/categories'
import { Route as BetaRouteImport } from './routes/beta'
import { Route as AboutRouteImport } from './routes/about'
import { Route as R404RouteImport } from './routes/404'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AppRoadmapRouteImport } from './routes/app/roadmap'
import { Route as AppPhilosophyRouteImport } from './routes/app/philosophy'
import { Route as AppLeaderboardRouteImport } from './routes/app/leaderboard'
import { Route as AppChangelogRouteImport } from './routes/app/changelog'
import { Route as AppUserRouteRouteImport } from './routes/app/user/route'
import { Route as AppShastarsRouteRouteImport } from './routes/app/shastars/route'
import { Route as AppResourcesRouteRouteImport } from './routes/app/resources/route'
import { Route as AppPostsRouteRouteImport } from './routes/app/posts/route'
import { Route as AppShastarsIndexRouteImport } from './routes/app/shastars/index'
import { Route as AppResourcesIndexRouteImport } from './routes/app/resources/index'
import { Route as AppPostsIndexRouteImport } from './routes/app/posts/index'
import { Route as AppUserAccountRouteImport } from './routes/app/user/account'
import { Route as AppShastarsCreateRouteImport } from './routes/app/shastars/create'
import { Route as AppResourcesCreateRouteImport } from './routes/app/resources/create'
import { Route as AppPostsCreateRouteImport } from './routes/app/posts/create'
import { Route as AppDiscordDiscordRouteImport } from './routes/app/discord/discord'
import { Route as AppShastarsSSIdRouteImport } from './routes/app/shastars/s.$sId'
import { Route as AppResourcesRRIdRouteImport } from './routes/app/resources/r.$rId'
import { Route as AppPostsPPIdRouteImport } from './routes/app/posts/p.$pId'

const NotficationsRoute = NotficationsRouteImport.update({
  id: '/notfications',
  path: '/notfications',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const CategoriesRoute = CategoriesRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => rootRouteImport,
} as any)
const BetaRoute = BetaRouteImport.update({
  id: '/beta',
  path: '/beta',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AppRoadmapRoute = AppRoadmapRouteImport.update({
  id: '/roadmap',
  path: '/roadmap',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppPhilosophyRoute = AppPhilosophyRouteImport.update({
  id: '/philosophy',
  path: '/philosophy',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppLeaderboardRoute = AppLeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppChangelogRoute = AppChangelogRouteImport.update({
  id: '/changelog',
  path: '/changelog',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppUserRouteRoute = AppUserRouteRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppShastarsRouteRoute = AppShastarsRouteRouteImport.update({
  id: '/shastars',
  path: '/shastars',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppResourcesRouteRoute = AppResourcesRouteRouteImport.update({
  id: '/resources',
  path: '/resources',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppPostsRouteRoute = AppPostsRouteRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppShastarsIndexRoute = AppShastarsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppShastarsRouteRoute,
} as any)
const AppResourcesIndexRoute = AppResourcesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppResourcesRouteRoute,
} as any)
const AppPostsIndexRoute = AppPostsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppPostsRouteRoute,
} as any)
const AppUserAccountRoute = AppUserAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AppUserRouteRoute,
} as any)
const AppShastarsCreateRoute = AppShastarsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AppShastarsRouteRoute,
} as any)
const AppResourcesCreateRoute = AppResourcesCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AppResourcesRouteRoute,
} as any)
const AppPostsCreateRoute = AppPostsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AppPostsRouteRoute,
} as any)
const AppDiscordDiscordRoute = AppDiscordDiscordRouteImport.update({
  id: '/discord/discord',
  path: '/discord/discord',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppShastarsSSIdRoute = AppShastarsSSIdRouteImport.update({
  id: '/s/$sId',
  path: '/s/$sId',
  getParentRoute: () => AppShastarsRouteRoute,
} as any)
const AppResourcesRRIdRoute = AppResourcesRRIdRouteImport.update({
  id: '/r/$rId',
  path: '/r/$rId',
  getParentRoute: () => AppResourcesRouteRoute,
} as any)
const AppPostsPPIdRoute = AppPostsPPIdRouteImport.update({
  id: '/p/$pId',
  path: '/p/$pId',
  getParentRoute: () => AppPostsRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRoute
  '/app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/beta': typeof BetaRoute
  '/categories': typeof CategoriesRoute
  '/contact': typeof ContactRoute
  '/notfications': typeof NotficationsRoute
  '/app/posts': typeof AppPostsRouteRouteWithChildren
  '/app/resources': typeof AppResourcesRouteRouteWithChildren
  '/app/shastars': typeof AppShastarsRouteRouteWithChildren
  '/app/user': typeof AppUserRouteRouteWithChildren
  '/app/changelog': typeof AppChangelogRoute
  '/app/leaderboard': typeof AppLeaderboardRoute
  '/app/philosophy': typeof AppPhilosophyRoute
  '/app/roadmap': typeof AppRoadmapRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/app/': typeof AppIndexRoute
  '/app/discord/discord': typeof AppDiscordDiscordRoute
  '/app/posts/create': typeof AppPostsCreateRoute
  '/app/resources/create': typeof AppResourcesCreateRoute
  '/app/shastars/create': typeof AppShastarsCreateRoute
  '/app/user/account': typeof AppUserAccountRoute
  '/app/posts/': typeof AppPostsIndexRoute
  '/app/resources/': typeof AppResourcesIndexRoute
  '/app/shastars/': typeof AppShastarsIndexRoute
  '/app/posts/p/$pId': typeof AppPostsPPIdRoute
  '/app/resources/r/$rId': typeof AppResourcesRRIdRoute
  '/app/shastars/s/$sId': typeof AppShastarsSSIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/beta': typeof BetaRoute
  '/categories': typeof CategoriesRoute
  '/contact': typeof ContactRoute
  '/notfications': typeof NotficationsRoute
  '/app/user': typeof AppUserRouteRouteWithChildren
  '/app/changelog': typeof AppChangelogRoute
  '/app/leaderboard': typeof AppLeaderboardRoute
  '/app/philosophy': typeof AppPhilosophyRoute
  '/app/roadmap': typeof AppRoadmapRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/app': typeof AppIndexRoute
  '/app/discord/discord': typeof AppDiscordDiscordRoute
  '/app/posts/create': typeof AppPostsCreateRoute
  '/app/resources/create': typeof AppResourcesCreateRoute
  '/app/shastars/create': typeof AppShastarsCreateRoute
  '/app/user/account': typeof AppUserAccountRoute
  '/app/posts': typeof AppPostsIndexRoute
  '/app/resources': typeof AppResourcesIndexRoute
  '/app/shastars': typeof AppShastarsIndexRoute
  '/app/posts/p/$pId': typeof AppPostsPPIdRoute
  '/app/resources/r/$rId': typeof AppResourcesRRIdRoute
  '/app/shastars/s/$sId': typeof AppShastarsSSIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRoute
  '/app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/beta': typeof BetaRoute
  '/categories': typeof CategoriesRoute
  '/contact': typeof ContactRoute
  '/notfications': typeof NotficationsRoute
  '/app/posts': typeof AppPostsRouteRouteWithChildren
  '/app/resources': typeof AppResourcesRouteRouteWithChildren
  '/app/shastars': typeof AppShastarsRouteRouteWithChildren
  '/app/user': typeof AppUserRouteRouteWithChildren
  '/app/changelog': typeof AppChangelogRoute
  '/app/leaderboard': typeof AppLeaderboardRoute
  '/app/philosophy': typeof AppPhilosophyRoute
  '/app/roadmap': typeof AppRoadmapRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/app/': typeof AppIndexRoute
  '/app/discord/discord': typeof AppDiscordDiscordRoute
  '/app/posts/create': typeof AppPostsCreateRoute
  '/app/resources/create': typeof AppResourcesCreateRoute
  '/app/shastars/create': typeof AppShastarsCreateRoute
  '/app/user/account': typeof AppUserAccountRoute
  '/app/posts/': typeof AppPostsIndexRoute
  '/app/resources/': typeof AppResourcesIndexRoute
  '/app/shastars/': typeof AppShastarsIndexRoute
  '/app/posts/p/$pId': typeof AppPostsPPIdRoute
  '/app/resources/r/$rId': typeof AppResourcesRRIdRoute
  '/app/shastars/s/$sId': typeof AppShastarsSSIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/app'
    | '/auth'
    | '/404'
    | '/about'
    | '/beta'
    | '/categories'
    | '/contact'
    | '/notfications'
    | '/app/posts'
    | '/app/resources'
    | '/app/shastars'
    | '/app/user'
    | '/app/changelog'
    | '/app/leaderboard'
    | '/app/philosophy'
    | '/app/roadmap'
    | '/auth/login'
    | '/auth/register'
    | '/app/'
    | '/app/discord/discord'
    | '/app/posts/create'
    | '/app/resources/create'
    | '/app/shastars/create'
    | '/app/user/account'
    | '/app/posts/'
    | '/app/resources/'
    | '/app/shastars/'
    | '/app/posts/p/$pId'
    | '/app/resources/r/$rId'
    | '/app/shastars/s/$sId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/auth'
    | '/404'
    | '/about'
    | '/beta'
    | '/categories'
    | '/contact'
    | '/notfications'
    | '/app/user'
    | '/app/changelog'
    | '/app/leaderboard'
    | '/app/philosophy'
    | '/app/roadmap'
    | '/auth/login'
    | '/auth/register'
    | '/app'
    | '/app/discord/discord'
    | '/app/posts/create'
    | '/app/resources/create'
    | '/app/shastars/create'
    | '/app/user/account'
    | '/app/posts'
    | '/app/resources'
    | '/app/shastars'
    | '/app/posts/p/$pId'
    | '/app/resources/r/$rId'
    | '/app/shastars/s/$sId'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/app'
    | '/auth'
    | '/404'
    | '/about'
    | '/beta'
    | '/categories'
    | '/contact'
    | '/notfications'
    | '/app/posts'
    | '/app/resources'
    | '/app/shastars'
    | '/app/user'
    | '/app/changelog'
    | '/app/leaderboard'
    | '/app/philosophy'
    | '/app/roadmap'
    | '/auth/login'
    | '/auth/register'
    | '/app/'
    | '/app/discord/discord'
    | '/app/posts/create'
    | '/app/resources/create'
    | '/app/shastars/create'
    | '/app/user/account'
    | '/app/posts/'
    | '/app/resources/'
    | '/app/shastars/'
    | '/app/posts/p/$pId'
    | '/app/resources/r/$rId'
    | '/app/shastars/s/$sId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  R404Route: typeof R404Route
  AboutRoute: typeof AboutRoute
  BetaRoute: typeof BetaRoute
  CategoriesRoute: typeof CategoriesRoute
  ContactRoute: typeof ContactRoute
  NotficationsRoute: typeof NotficationsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/notfications': {
      id: '/notfications'
      path: '/notfications'
      fullPath: '/notfications'
      preLoaderRoute: typeof NotficationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/categories': {
      id: '/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/beta': {
      id: '/beta'
      path: '/beta'
      fullPath: '/beta'
      preLoaderRoute: typeof BetaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/app/roadmap': {
      id: '/app/roadmap'
      path: '/roadmap'
      fullPath: '/app/roadmap'
      preLoaderRoute: typeof AppRoadmapRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/philosophy': {
      id: '/app/philosophy'
      path: '/philosophy'
      fullPath: '/app/philosophy'
      preLoaderRoute: typeof AppPhilosophyRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/leaderboard': {
      id: '/app/leaderboard'
      path: '/leaderboard'
      fullPath: '/app/leaderboard'
      preLoaderRoute: typeof AppLeaderboardRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/changelog': {
      id: '/app/changelog'
      path: '/changelog'
      fullPath: '/app/changelog'
      preLoaderRoute: typeof AppChangelogRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/user': {
      id: '/app/user'
      path: '/user'
      fullPath: '/app/user'
      preLoaderRoute: typeof AppUserRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/shastars': {
      id: '/app/shastars'
      path: '/shastars'
      fullPath: '/app/shastars'
      preLoaderRoute: typeof AppShastarsRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/resources': {
      id: '/app/resources'
      path: '/resources'
      fullPath: '/app/resources'
      preLoaderRoute: typeof AppResourcesRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/posts': {
      id: '/app/posts'
      path: '/posts'
      fullPath: '/app/posts'
      preLoaderRoute: typeof AppPostsRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/shastars/': {
      id: '/app/shastars/'
      path: '/'
      fullPath: '/app/shastars/'
      preLoaderRoute: typeof AppShastarsIndexRouteImport
      parentRoute: typeof AppShastarsRouteRoute
    }
    '/app/resources/': {
      id: '/app/resources/'
      path: '/'
      fullPath: '/app/resources/'
      preLoaderRoute: typeof AppResourcesIndexRouteImport
      parentRoute: typeof AppResourcesRouteRoute
    }
    '/app/posts/': {
      id: '/app/posts/'
      path: '/'
      fullPath: '/app/posts/'
      preLoaderRoute: typeof AppPostsIndexRouteImport
      parentRoute: typeof AppPostsRouteRoute
    }
    '/app/user/account': {
      id: '/app/user/account'
      path: '/account'
      fullPath: '/app/user/account'
      preLoaderRoute: typeof AppUserAccountRouteImport
      parentRoute: typeof AppUserRouteRoute
    }
    '/app/shastars/create': {
      id: '/app/shastars/create'
      path: '/create'
      fullPath: '/app/shastars/create'
      preLoaderRoute: typeof AppShastarsCreateRouteImport
      parentRoute: typeof AppShastarsRouteRoute
    }
    '/app/resources/create': {
      id: '/app/resources/create'
      path: '/create'
      fullPath: '/app/resources/create'
      preLoaderRoute: typeof AppResourcesCreateRouteImport
      parentRoute: typeof AppResourcesRouteRoute
    }
    '/app/posts/create': {
      id: '/app/posts/create'
      path: '/create'
      fullPath: '/app/posts/create'
      preLoaderRoute: typeof AppPostsCreateRouteImport
      parentRoute: typeof AppPostsRouteRoute
    }
    '/app/discord/discord': {
      id: '/app/discord/discord'
      path: '/discord/discord'
      fullPath: '/app/discord/discord'
      preLoaderRoute: typeof AppDiscordDiscordRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/shastars/s/$sId': {
      id: '/app/shastars/s/$sId'
      path: '/s/$sId'
      fullPath: '/app/shastars/s/$sId'
      preLoaderRoute: typeof AppShastarsSSIdRouteImport
      parentRoute: typeof AppShastarsRouteRoute
    }
    '/app/resources/r/$rId': {
      id: '/app/resources/r/$rId'
      path: '/r/$rId'
      fullPath: '/app/resources/r/$rId'
      preLoaderRoute: typeof AppResourcesRRIdRouteImport
      parentRoute: typeof AppResourcesRouteRoute
    }
    '/app/posts/p/$pId': {
      id: '/app/posts/p/$pId'
      path: '/p/$pId'
      fullPath: '/app/posts/p/$pId'
      preLoaderRoute: typeof AppPostsPPIdRouteImport
      parentRoute: typeof AppPostsRouteRoute
    }
  }
}

interface AppPostsRouteRouteChildren {
  AppPostsCreateRoute: typeof AppPostsCreateRoute
  AppPostsIndexRoute: typeof AppPostsIndexRoute
  AppPostsPPIdRoute: typeof AppPostsPPIdRoute
}

const AppPostsRouteRouteChildren: AppPostsRouteRouteChildren = {
  AppPostsCreateRoute: AppPostsCreateRoute,
  AppPostsIndexRoute: AppPostsIndexRoute,
  AppPostsPPIdRoute: AppPostsPPIdRoute,
}

const AppPostsRouteRouteWithChildren = AppPostsRouteRoute._addFileChildren(
  AppPostsRouteRouteChildren,
)

interface AppResourcesRouteRouteChildren {
  AppResourcesCreateRoute: typeof AppResourcesCreateRoute
  AppResourcesIndexRoute: typeof AppResourcesIndexRoute
  AppResourcesRRIdRoute: typeof AppResourcesRRIdRoute
}

const AppResourcesRouteRouteChildren: AppResourcesRouteRouteChildren = {
  AppResourcesCreateRoute: AppResourcesCreateRoute,
  AppResourcesIndexRoute: AppResourcesIndexRoute,
  AppResourcesRRIdRoute: AppResourcesRRIdRoute,
}

const AppResourcesRouteRouteWithChildren =
  AppResourcesRouteRoute._addFileChildren(AppResourcesRouteRouteChildren)

interface AppShastarsRouteRouteChildren {
  AppShastarsCreateRoute: typeof AppShastarsCreateRoute
  AppShastarsIndexRoute: typeof AppShastarsIndexRoute
  AppShastarsSSIdRoute: typeof AppShastarsSSIdRoute
}

const AppShastarsRouteRouteChildren: AppShastarsRouteRouteChildren = {
  AppShastarsCreateRoute: AppShastarsCreateRoute,
  AppShastarsIndexRoute: AppShastarsIndexRoute,
  AppShastarsSSIdRoute: AppShastarsSSIdRoute,
}

const AppShastarsRouteRouteWithChildren =
  AppShastarsRouteRoute._addFileChildren(AppShastarsRouteRouteChildren)

interface AppUserRouteRouteChildren {
  AppUserAccountRoute: typeof AppUserAccountRoute
}

const AppUserRouteRouteChildren: AppUserRouteRouteChildren = {
  AppUserAccountRoute: AppUserAccountRoute,
}

const AppUserRouteRouteWithChildren = AppUserRouteRoute._addFileChildren(
  AppUserRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppPostsRouteRoute: typeof AppPostsRouteRouteWithChildren
  AppResourcesRouteRoute: typeof AppResourcesRouteRouteWithChildren
  AppShastarsRouteRoute: typeof AppShastarsRouteRouteWithChildren
  AppUserRouteRoute: typeof AppUserRouteRouteWithChildren
  AppChangelogRoute: typeof AppChangelogRoute
  AppLeaderboardRoute: typeof AppLeaderboardRoute
  AppPhilosophyRoute: typeof AppPhilosophyRoute
  AppRoadmapRoute: typeof AppRoadmapRoute
  AppIndexRoute: typeof AppIndexRoute
  AppDiscordDiscordRoute: typeof AppDiscordDiscordRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppPostsRouteRoute: AppPostsRouteRouteWithChildren,
  AppResourcesRouteRoute: AppResourcesRouteRouteWithChildren,
  AppShastarsRouteRoute: AppShastarsRouteRouteWithChildren,
  AppUserRouteRoute: AppUserRouteRouteWithChildren,
  AppChangelogRoute: AppChangelogRoute,
  AppLeaderboardRoute: AppLeaderboardRoute,
  AppPhilosophyRoute: AppPhilosophyRoute,
  AppRoadmapRoute: AppRoadmapRoute,
  AppIndexRoute: AppIndexRoute,
  AppDiscordDiscordRoute: AppDiscordDiscordRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  R404Route: R404Route,
  AboutRoute: AboutRoute,
  BetaRoute: BetaRoute,
  CategoriesRoute: CategoriesRoute,
  ContactRoute: ContactRoute,
  NotficationsRoute: NotficationsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
