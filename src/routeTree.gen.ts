/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NotficationsRouteImport } from './routes/notfications'
import { Route as LandingRouteImport } from './routes/landing'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as CategoriesRouteImport } from './routes/categories'
import { Route as BetaRouteImport } from './routes/beta'
import { Route as AboutRouteImport } from './routes/about'
import { Route as R404RouteImport } from './routes/404'
import { Route as UserRouteRouteImport } from './routes/user/route'
import { Route as ShastarsRouteRouteImport } from './routes/shastars/route'
import { Route as ResourcesRouteRouteImport } from './routes/resources/route'
import { Route as PostsRouteRouteImport } from './routes/posts/route'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ShastarsIndexRouteImport } from './routes/shastars/index'
import { Route as ResourcesIndexRouteImport } from './routes/resources/index'
import { Route as PostsIndexRouteImport } from './routes/posts/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as UserAccountRouteImport } from './routes/user/account'
import { Route as ShastarsCreateRouteImport } from './routes/shastars/create'
import { Route as ResourcesCreateRouteImport } from './routes/resources/create'
import { Route as PostsCreateRouteImport } from './routes/posts/create'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AppRoadmapRouteImport } from './routes/app/roadmap'
import { Route as AppPhilosophyRouteImport } from './routes/app/philosophy'
import { Route as AppChangelogRouteImport } from './routes/app/changelog'
import { Route as ShastarsSSIdRouteImport } from './routes/shastars/s.$sId'
import { Route as ResourcesRRIdRouteImport } from './routes/resources/r.$rId'
import { Route as PostsPPIdRouteImport } from './routes/posts/p.$pId'
import { Route as AppDiscordDiscordRouteImport } from './routes/app/discord/discord'

const NotficationsRoute = NotficationsRouteImport.update({
  id: '/notfications',
  path: '/notfications',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingRoute = LandingRouteImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const CategoriesRoute = CategoriesRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => rootRouteImport,
} as any)
const BetaRoute = BetaRouteImport.update({
  id: '/beta',
  path: '/beta',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const UserRouteRoute = UserRouteRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRouteImport,
} as any)
const ShastarsRouteRoute = ShastarsRouteRouteImport.update({
  id: '/shastars',
  path: '/shastars',
  getParentRoute: () => rootRouteImport,
} as any)
const ResourcesRouteRoute = ResourcesRouteRouteImport.update({
  id: '/resources',
  path: '/resources',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsRouteRoute = PostsRouteRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShastarsIndexRoute = ShastarsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ShastarsRouteRoute,
} as any)
const ResourcesIndexRoute = ResourcesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResourcesRouteRoute,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRouteRoute,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const UserAccountRoute = UserAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => UserRouteRoute,
} as any)
const ShastarsCreateRoute = ShastarsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => ShastarsRouteRoute,
} as any)
const ResourcesCreateRoute = ResourcesCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => ResourcesRouteRoute,
} as any)
const PostsCreateRoute = PostsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PostsRouteRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoadmapRoute = AppRoadmapRouteImport.update({
  id: '/roadmap',
  path: '/roadmap',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppPhilosophyRoute = AppPhilosophyRouteImport.update({
  id: '/philosophy',
  path: '/philosophy',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppChangelogRoute = AppChangelogRouteImport.update({
  id: '/changelog',
  path: '/changelog',
  getParentRoute: () => AppRouteRoute,
} as any)
const ShastarsSSIdRoute = ShastarsSSIdRouteImport.update({
  id: '/s/$sId',
  path: '/s/$sId',
  getParentRoute: () => ShastarsRouteRoute,
} as any)
const ResourcesRRIdRoute = ResourcesRRIdRouteImport.update({
  id: '/r/$rId',
  path: '/r/$rId',
  getParentRoute: () => ResourcesRouteRoute,
} as any)
const PostsPPIdRoute = PostsPPIdRouteImport.update({
  id: '/p/$pId',
  path: '/p/$pId',
  getParentRoute: () => PostsRouteRoute,
} as any)
const AppDiscordDiscordRoute = AppDiscordDiscordRouteImport.update({
  id: '/discord/discord',
  path: '/discord/discord',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRoute
  '/app': typeof AppRouteRouteWithChildren
  '/posts': typeof PostsRouteRouteWithChildren
  '/resources': typeof ResourcesRouteRouteWithChildren
  '/shastars': typeof ShastarsRouteRouteWithChildren
  '/user': typeof UserRouteRouteWithChildren
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/beta': typeof BetaRoute
  '/categories': typeof CategoriesRoute
  '/contact': typeof ContactRoute
  '/landing': typeof LandingRoute
  '/notfications': typeof NotficationsRoute
  '/app/changelog': typeof AppChangelogRoute
  '/app/philosophy': typeof AppPhilosophyRoute
  '/app/roadmap': typeof AppRoadmapRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/posts/create': typeof PostsCreateRoute
  '/resources/create': typeof ResourcesCreateRoute
  '/shastars/create': typeof ShastarsCreateRoute
  '/user/account': typeof UserAccountRoute
  '/app/': typeof AppIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/resources/': typeof ResourcesIndexRoute
  '/shastars/': typeof ShastarsIndexRoute
  '/app/discord/discord': typeof AppDiscordDiscordRoute
  '/posts/p/$pId': typeof PostsPPIdRoute
  '/resources/r/$rId': typeof ResourcesRRIdRoute
  '/shastars/s/$sId': typeof ShastarsSSIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRoute
  '/user': typeof UserRouteRouteWithChildren
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/beta': typeof BetaRoute
  '/categories': typeof CategoriesRoute
  '/contact': typeof ContactRoute
  '/landing': typeof LandingRoute
  '/notfications': typeof NotficationsRoute
  '/app/changelog': typeof AppChangelogRoute
  '/app/philosophy': typeof AppPhilosophyRoute
  '/app/roadmap': typeof AppRoadmapRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/posts/create': typeof PostsCreateRoute
  '/resources/create': typeof ResourcesCreateRoute
  '/shastars/create': typeof ShastarsCreateRoute
  '/user/account': typeof UserAccountRoute
  '/app': typeof AppIndexRoute
  '/posts': typeof PostsIndexRoute
  '/resources': typeof ResourcesIndexRoute
  '/shastars': typeof ShastarsIndexRoute
  '/app/discord/discord': typeof AppDiscordDiscordRoute
  '/posts/p/$pId': typeof PostsPPIdRoute
  '/resources/r/$rId': typeof ResourcesRRIdRoute
  '/shastars/s/$sId': typeof ShastarsSSIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRoute
  '/app': typeof AppRouteRouteWithChildren
  '/posts': typeof PostsRouteRouteWithChildren
  '/resources': typeof ResourcesRouteRouteWithChildren
  '/shastars': typeof ShastarsRouteRouteWithChildren
  '/user': typeof UserRouteRouteWithChildren
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/beta': typeof BetaRoute
  '/categories': typeof CategoriesRoute
  '/contact': typeof ContactRoute
  '/landing': typeof LandingRoute
  '/notfications': typeof NotficationsRoute
  '/app/changelog': typeof AppChangelogRoute
  '/app/philosophy': typeof AppPhilosophyRoute
  '/app/roadmap': typeof AppRoadmapRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/posts/create': typeof PostsCreateRoute
  '/resources/create': typeof ResourcesCreateRoute
  '/shastars/create': typeof ShastarsCreateRoute
  '/user/account': typeof UserAccountRoute
  '/app/': typeof AppIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/resources/': typeof ResourcesIndexRoute
  '/shastars/': typeof ShastarsIndexRoute
  '/app/discord/discord': typeof AppDiscordDiscordRoute
  '/posts/p/$pId': typeof PostsPPIdRoute
  '/resources/r/$rId': typeof ResourcesRRIdRoute
  '/shastars/s/$sId': typeof ShastarsSSIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/app'
    | '/posts'
    | '/resources'
    | '/shastars'
    | '/user'
    | '/404'
    | '/about'
    | '/beta'
    | '/categories'
    | '/contact'
    | '/landing'
    | '/notfications'
    | '/app/changelog'
    | '/app/philosophy'
    | '/app/roadmap'
    | '/auth/login'
    | '/auth/register'
    | '/posts/create'
    | '/resources/create'
    | '/shastars/create'
    | '/user/account'
    | '/app/'
    | '/posts/'
    | '/resources/'
    | '/shastars/'
    | '/app/discord/discord'
    | '/posts/p/$pId'
    | '/resources/r/$rId'
    | '/shastars/s/$sId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/user'
    | '/404'
    | '/about'
    | '/beta'
    | '/categories'
    | '/contact'
    | '/landing'
    | '/notfications'
    | '/app/changelog'
    | '/app/philosophy'
    | '/app/roadmap'
    | '/auth/login'
    | '/auth/register'
    | '/posts/create'
    | '/resources/create'
    | '/shastars/create'
    | '/user/account'
    | '/app'
    | '/posts'
    | '/resources'
    | '/shastars'
    | '/app/discord/discord'
    | '/posts/p/$pId'
    | '/resources/r/$rId'
    | '/shastars/s/$sId'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/app'
    | '/posts'
    | '/resources'
    | '/shastars'
    | '/user'
    | '/404'
    | '/about'
    | '/beta'
    | '/categories'
    | '/contact'
    | '/landing'
    | '/notfications'
    | '/app/changelog'
    | '/app/philosophy'
    | '/app/roadmap'
    | '/auth/login'
    | '/auth/register'
    | '/posts/create'
    | '/resources/create'
    | '/shastars/create'
    | '/user/account'
    | '/app/'
    | '/posts/'
    | '/resources/'
    | '/shastars/'
    | '/app/discord/discord'
    | '/posts/p/$pId'
    | '/resources/r/$rId'
    | '/shastars/s/$sId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  PostsRouteRoute: typeof PostsRouteRouteWithChildren
  ResourcesRouteRoute: typeof ResourcesRouteRouteWithChildren
  ShastarsRouteRoute: typeof ShastarsRouteRouteWithChildren
  UserRouteRoute: typeof UserRouteRouteWithChildren
  R404Route: typeof R404Route
  AboutRoute: typeof AboutRoute
  BetaRoute: typeof BetaRoute
  CategoriesRoute: typeof CategoriesRoute
  ContactRoute: typeof ContactRoute
  LandingRoute: typeof LandingRoute
  NotficationsRoute: typeof NotficationsRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/notfications': {
      id: '/notfications'
      path: '/notfications'
      fullPath: '/notfications'
      preLoaderRoute: typeof NotficationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/categories': {
      id: '/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/beta': {
      id: '/beta'
      path: '/beta'
      fullPath: '/beta'
      preLoaderRoute: typeof BetaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shastars': {
      id: '/shastars'
      path: '/shastars'
      fullPath: '/shastars'
      preLoaderRoute: typeof ShastarsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/resources': {
      id: '/resources'
      path: '/resources'
      fullPath: '/resources'
      preLoaderRoute: typeof ResourcesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shastars/': {
      id: '/shastars/'
      path: '/'
      fullPath: '/shastars/'
      preLoaderRoute: typeof ShastarsIndexRouteImport
      parentRoute: typeof ShastarsRouteRoute
    }
    '/resources/': {
      id: '/resources/'
      path: '/'
      fullPath: '/resources/'
      preLoaderRoute: typeof ResourcesIndexRouteImport
      parentRoute: typeof ResourcesRouteRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/user/account': {
      id: '/user/account'
      path: '/account'
      fullPath: '/user/account'
      preLoaderRoute: typeof UserAccountRouteImport
      parentRoute: typeof UserRouteRoute
    }
    '/shastars/create': {
      id: '/shastars/create'
      path: '/create'
      fullPath: '/shastars/create'
      preLoaderRoute: typeof ShastarsCreateRouteImport
      parentRoute: typeof ShastarsRouteRoute
    }
    '/resources/create': {
      id: '/resources/create'
      path: '/create'
      fullPath: '/resources/create'
      preLoaderRoute: typeof ResourcesCreateRouteImport
      parentRoute: typeof ResourcesRouteRoute
    }
    '/posts/create': {
      id: '/posts/create'
      path: '/create'
      fullPath: '/posts/create'
      preLoaderRoute: typeof PostsCreateRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/roadmap': {
      id: '/app/roadmap'
      path: '/roadmap'
      fullPath: '/app/roadmap'
      preLoaderRoute: typeof AppRoadmapRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/philosophy': {
      id: '/app/philosophy'
      path: '/philosophy'
      fullPath: '/app/philosophy'
      preLoaderRoute: typeof AppPhilosophyRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/changelog': {
      id: '/app/changelog'
      path: '/changelog'
      fullPath: '/app/changelog'
      preLoaderRoute: typeof AppChangelogRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/shastars/s/$sId': {
      id: '/shastars/s/$sId'
      path: '/s/$sId'
      fullPath: '/shastars/s/$sId'
      preLoaderRoute: typeof ShastarsSSIdRouteImport
      parentRoute: typeof ShastarsRouteRoute
    }
    '/resources/r/$rId': {
      id: '/resources/r/$rId'
      path: '/r/$rId'
      fullPath: '/resources/r/$rId'
      preLoaderRoute: typeof ResourcesRRIdRouteImport
      parentRoute: typeof ResourcesRouteRoute
    }
    '/posts/p/$pId': {
      id: '/posts/p/$pId'
      path: '/p/$pId'
      fullPath: '/posts/p/$pId'
      preLoaderRoute: typeof PostsPPIdRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/app/discord/discord': {
      id: '/app/discord/discord'
      path: '/discord/discord'
      fullPath: '/app/discord/discord'
      preLoaderRoute: typeof AppDiscordDiscordRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppChangelogRoute: typeof AppChangelogRoute
  AppPhilosophyRoute: typeof AppPhilosophyRoute
  AppRoadmapRoute: typeof AppRoadmapRoute
  AppIndexRoute: typeof AppIndexRoute
  AppDiscordDiscordRoute: typeof AppDiscordDiscordRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppChangelogRoute: AppChangelogRoute,
  AppPhilosophyRoute: AppPhilosophyRoute,
  AppRoadmapRoute: AppRoadmapRoute,
  AppIndexRoute: AppIndexRoute,
  AppDiscordDiscordRoute: AppDiscordDiscordRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface PostsRouteRouteChildren {
  PostsCreateRoute: typeof PostsCreateRoute
  PostsIndexRoute: typeof PostsIndexRoute
  PostsPPIdRoute: typeof PostsPPIdRoute
}

const PostsRouteRouteChildren: PostsRouteRouteChildren = {
  PostsCreateRoute: PostsCreateRoute,
  PostsIndexRoute: PostsIndexRoute,
  PostsPPIdRoute: PostsPPIdRoute,
}

const PostsRouteRouteWithChildren = PostsRouteRoute._addFileChildren(
  PostsRouteRouteChildren,
)

interface ResourcesRouteRouteChildren {
  ResourcesCreateRoute: typeof ResourcesCreateRoute
  ResourcesIndexRoute: typeof ResourcesIndexRoute
  ResourcesRRIdRoute: typeof ResourcesRRIdRoute
}

const ResourcesRouteRouteChildren: ResourcesRouteRouteChildren = {
  ResourcesCreateRoute: ResourcesCreateRoute,
  ResourcesIndexRoute: ResourcesIndexRoute,
  ResourcesRRIdRoute: ResourcesRRIdRoute,
}

const ResourcesRouteRouteWithChildren = ResourcesRouteRoute._addFileChildren(
  ResourcesRouteRouteChildren,
)

interface ShastarsRouteRouteChildren {
  ShastarsCreateRoute: typeof ShastarsCreateRoute
  ShastarsIndexRoute: typeof ShastarsIndexRoute
  ShastarsSSIdRoute: typeof ShastarsSSIdRoute
}

const ShastarsRouteRouteChildren: ShastarsRouteRouteChildren = {
  ShastarsCreateRoute: ShastarsCreateRoute,
  ShastarsIndexRoute: ShastarsIndexRoute,
  ShastarsSSIdRoute: ShastarsSSIdRoute,
}

const ShastarsRouteRouteWithChildren = ShastarsRouteRoute._addFileChildren(
  ShastarsRouteRouteChildren,
)

interface UserRouteRouteChildren {
  UserAccountRoute: typeof UserAccountRoute
}

const UserRouteRouteChildren: UserRouteRouteChildren = {
  UserAccountRoute: UserAccountRoute,
}

const UserRouteRouteWithChildren = UserRouteRoute._addFileChildren(
  UserRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  PostsRouteRoute: PostsRouteRouteWithChildren,
  ResourcesRouteRoute: ResourcesRouteRouteWithChildren,
  ShastarsRouteRoute: ShastarsRouteRouteWithChildren,
  UserRouteRoute: UserRouteRouteWithChildren,
  R404Route: R404Route,
  AboutRoute: AboutRoute,
  BetaRoute: BetaRoute,
  CategoriesRoute: CategoriesRoute,
  ContactRoute: ContactRoute,
  LandingRoute: LandingRoute,
  NotficationsRoute: NotficationsRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
